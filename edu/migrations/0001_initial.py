# Generated by Django 3.1 on 2022-06-14 22:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import edu.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=25, unique=True)),
                ('description', models.TextField(unique=True)),
                ('preview', models.ImageField(upload_to=edu.models.upload_image)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('upd_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='En_lvl_results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('upd_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=40)),
                ('type', models.CharField(choices=[('1', 'Text'), ('2', 'Audio'), ('3', 'Video'), ('4', 'Image')], default='1', max_length=1)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('upd_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User2Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_finished', models.BooleanField(default=False)),
                ('min_percent', models.PositiveSmallIntegerField(default=100, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('course_tb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.courses')),
                ('user_tb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Themes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_name', models.CharField(max_length=25)),
                ('description', models.TextField(blank=True)),
                ('preview', models.ImageField(blank=True, upload_to=edu.models.upload_image)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.courses')),
            ],
        ),
        migrations.CreateModel(
            name='Tests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', 'English level'), ('2', 'Exam for course')], max_length=1)),
                ('description', models.TextField(max_length=70)),
                ('preview', models.ImageField(blank=True, upload_to=edu.models.upload_image)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('upd_time', models.DateTimeField(auto_now=True)),
                ('courses', models.ManyToManyField(related_name='test_for_course', to='edu.Courses')),
                ('en_lvl', models.ManyToManyField(through='edu.En_lvl_results', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_finished', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('upd_time', models.DateTimeField(auto_now=True)),
                ('lesson_tb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intermediate_tb_for_lessons_results', to='edu.lessons')),
                ('user_tb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='lessons',
            name='result',
            field=models.ManyToManyField(through='edu.Result', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lessons',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.themes'),
        ),
        migrations.AddField(
            model_name='en_lvl_results',
            name='test_tb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.tests'),
        ),
        migrations.AddField(
            model_name='en_lvl_results',
            name='user_tb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='courses',
            name='users',
            field=models.ManyToManyField(through='edu.User2Course', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('image', models.FileField(upload_to='')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
